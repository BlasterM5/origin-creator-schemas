{
    links: {
        damage: {
            desc: Checks the damage done to the player. Missing corresponding list of predicates.
            type: object
            props: {
                blocked: {
                    desc: Checks if the damage was successfully blocked.
                    enum: [true, false]
                    unspec: true
                }
                dealt: {
                    desc: Checks the amount of incoming damage before damage reduction.
                    id: predicates-7
                    link: nummm0
                }
                taken: {
                    desc: Checks the amount of incoming damage after damage reduction.
                    id: predicates-7
                    link: nummm0
                }
                source_entity: {
                    desc: Checks the entity that was the source of the damage (for example, the skeleton that shot the arrow).
                    id: predicates-7
                    link: entity_pred
                }
                type: {
                    desc: Checks the type of damage done.
                    id: predicates-7
                    link: damage_pred
                }
            }
        }
    }
    type: object
    props: {
        display: {
            type: object
            props: {
                icon: {
                    type: object
                    props: {
                        item: {
                            desc: The item ID to use for the icon.
                            id: predicates-7
                            link: item
                        }
                        nbt: {
                            desc: The nbt data of the item to use for the icon.
                            type: string
                            ext: true
                        }
                    }
                }
                title: {
                    desc: The title for this advancement.
                    id: item_modifiers-7
                    link: jsontxt
                }
                description: {
                    desc: The description of the advancement.
                    id: item_modifiers-7
                    link: jsontxt
                }
                frame: {
                    desc: he optional type of frame for the icon. challenge for a tile with a more fancy spiked border as it is used for the kill all mobs advancement, goal for a tile with a rounded border as it is used for the full beacon advancement, task for a normal tile.
                    enum: ["task", "goal", "challenge"]
                }
                background: {
                    desc: The optional directory for the background to use in this advancement tab (used only for the root advancement).
                    type: string
                }
                show_toast: {
                    desc: Whether or not to show the toast pop up after completing this advancement.
                    type: boolean
                    default: true
                }
                announce_to_chat: {
                    desc: Whether or not to announce in the chat when this advancement has been completed.
                    type: boolean
                    default: true
                }
                hidden: {
                    desc: Whether or not to hide this advancement and all its children from the advancement screen until this advancement have been completed. Has no effect on root advancements themselves, but still affects all their children.
                    type: boolean
                }
            }
        }
        parent: {
            desc: The optional parent advancement directory of this advancement. If this field is absent, this advancement is a root advancement. Circular references cause a loading failure.
            type: string
        }
        criteria: {
            desc: A criteria map to be used by "requirements". If "requirements" is not specified, then all of these criteria need to be met.
            type: object
            extra: {
                type: object
                props: {
                    trigger: {
                        enum: [
                            bee_nest_destroyed
                            bred_animals
                            brewed_potion
                            changed_dimension
                            channeled_lightning
                            construct_beacon
                            consume_item
                            cured_zombie_villager
                            effects_changed
                            enchanted_item
                            enter_block
                            entity_hurt_player
                            entity_killed_player
                            filled_bucket
                            fishing_rod_hooked
                            hero_of_the_village
                            impossible
                            inventory_changed
                            item_durability_changed
                            item_used_on_block
                            killed_by_crossbow
                            levitation
                            lightning_strike
                            location
                            nether_travel
                            placed_block
                            player_generates_container_loot
                            player_hurt_entity
                            player_interacted_with_entity
                            player_killed_entity
                            recipe_unlocked
                            shot_crossbow
                            slept_in_bed
                            slide_down_block
                            started_riding
                            summoned_entity
                            tame_animal
                            target_hit
                            thrown_item_picked_up_by_entity
                            tick
                            used_ender_eye
                            used_totem
                            using_item
                            villager_trade
                            voluntary_exile
                        ]
                        more: {
                            string-bee_nest_destroyed: {
                                conditions: {
                                    type: object
                                    props: {
                                        block: {
                                            desc: The block that was destroyed. Accepts block IDs.
                                            id: predicates-7
                                            link: block
                                        }
                                        item: {
                                            desc: The item used to break the block
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        num_bees_inside: {
                                            desc: The number of bees that were inside the bee nest/beehive before it was broken.
                                            type: integer
                                            min: 0
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-bred_animals: {
                                conditions: {
                                    type: object
                                    props: {
                                        child: {
                                            desc: The child that results from the breeding. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        parent: {
                                            desc: The parent. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        partner: {
                                            desc: The partner. (The entity the parent was bred with) May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-brewed_potion: {
                                conditions: {
                                    type: object
                                    props: {
                                        potion: {
                                            desc: A brewed potion ID.
                                            href: https://minecraft.fandom.com/wiki/Potion#Item_data
                                            type: string
                                            allow: a-z0-9_\/:-
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-changed_dimension: {
                                conditions: {
                                    type: object
                                    props: {
                                        from: {
                                            desc: The dimension the entity traveled from.
                                            type: string
                                            allow: a-z0-9_\/:-
                                        }
                                        to: {
                                            desc: The dimension the entity traveled to.
                                            type: string
                                            allow: a-z0-9_\/:-
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-channeled_lightning: {
                                conditions: {
                                    type: object
                                    props: {
                                        victims: {
                                            desc: The victims hit by the lightning summoned by the Channeling enchantment. All entities in this list must be hit. Each entry may also be a list of predicates that must pass in order for the trigger to activate. The checks are applied to the victim hit by the enchanted trident.
                                            type: list
                                            vals: {
                                                id: predicates-7
                                                link: entity_preds
                                            }
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-construct_beacon: {
                                conditions: {
                                    type: object
                                    props: {
                                        level: {
                                            desc: The tier of the updated beacon structure.
                                            id: predicates-7
                                            link: intmm0
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-consume_item: {
                                conditions: {
                                    type: object
                                    props: {
                                        item: {
                                            desc: The item that was consumed.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-cured_zombie_villager: {
                                conditions: {
                                    type: object
                                    props: {
                                        villager: {
                                            desc: The villager that is the result of the conversion. The 'type' tag is redundant since it will always be "villager". May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        zombie: {
                                            desc: The zombie villager right before the conversion is complete (not when it is initiated). The 'type' tag is redundant since it will always be "zombie_villager". May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-effects_changed: {
                                conditions: {
                                    type: object
                                    props: {
                                        effects: {
                                            type: object
                                            extra: {
                                                type: object
                                                props: {
                                                    amplifier: {
                                                        desc: The effect amplifier.
                                                        id: predicates-7
                                                        link: intmm0
                                                    }
                                                    duration: {
                                                        desc: The effect duration in ticks.
                                                        id: predicates-7
                                                        link: intmm0
                                                    }
                                                }
                                            }
                                        }
                                        source: {
                                            desc: The entity that was the source of the status effect. Empty when there is no entity or when the effect was self-applied or removed. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-enchanted_item: {
                                conditions: {
                                    type: object
                                    props: {
                                        item: {
                                            desc: The item after it has been enchanted.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        levels: {
                                            desc: The levels spent by the player on the enchantment.
                                            id: predicates-7
                                            link: intmm0
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-enter_block: {
                                conditions: {
                                    type: object
                                    props: {
                                        block: {
                                            desc: The block that the player is standing in. Accepts block IDs
                                            href: https://minecraft.fandom.com/wiki/Java_Edition_data_values/Blocks
                                            type: string
                                            allow: a-z0-9_\/:-
                                        }
                                        state: {
                                            desc: The block states of the block, with the key names being the state names and the values being the required values for those states.
                                            type: object
                                            extra: {
                                                type: string
                                            }
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-entity_hurt_player: {
                                conditions: {
                                    type: object
                                    props: {
                                        damage: {
                                            desc: Checks the damage done to the player. Missing corresponding list of predicates.
                                            link: damage
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-entity_killed_player: {
                                conditions: {
                                    type: object
                                    props: {
                                        killing_blow: {
                                            desc: Checks the type of damage that killed the player.
                                            id: predicates-7
                                            link: damage_pred
                                        }
                                        entity: {
                                            desc: Checks the entity that was the source of the damage that killed the player (for example: The skeleton that shot the arrow). May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-filled_bucket: {
                                conditions: {
                                    type: object
                                    props: {
                                        item: {
                                            desc: The item resulting from filling the bucket.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-fishing_rod_hooked: {
                                conditions: {
                                    type: object
                                    props: {
                                        item: {
                                            desc: The item that was caught.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        rod: {
                                            desc: The fishing rod used.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        entity: {
                                            desc: The entity that was pulled. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-hero_of_the_village: {
                                conditions: {
                                    type: object
                                    props: {
                                        location: {
                                            desc: The location of the player.
                                            id: predicates-7
                                            link: location_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-impossible: {}
                            string-inventory_changed: {
                                conditions: {
                                    type: object
                                    props: {
                                        items: {
                                            desc: A list of items in the player's inventory. All items in the list must be in the player's inventory, but not all items in the player's inventory have to be in this list.
                                            type: list
                                            vals: {
                                                id: predicates-7
                                                link: item_pred
                                            }
                                        }
                                        slots: {
                                            type: object
                                            props: {
                                                empty: {
                                                    desc: The amount of slots empty in the inventory.
                                                    id: predicates-7
                                                    link: intmm0
                                                }
                                                full: {
                                                    desc: The amount of slots filled (stacksize) in the inventory.
                                                    id: predicates-7
                                                    link: intmm0
                                                }
                                                occupied: {
                                                    desc: The amount of slots occupied in the inventory.
                                                    id: predicates-7
                                                    link: intmm0
                                                }
                                            }
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-item_durability_changed: {
                                conditions: {
                                    type: object
                                    props: {
                                        delta: {
                                            desc: The change in durability (negative numbers are used to indicate a decrease in durability).
                                            id: predicates-7
                                            link: intmm0
                                        }
                                        durability: {
                                            desc: The remaining durability of the item.
                                            id: predicates-7
                                            link: intmm0
                                        }
                                        item: {
                                            desc: The item before it was damaged, allows you to check the durability before the item was damaged.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-item_used_on_block: {
                                conditions: {
                                    type: object
                                    props: {
                                        location: {
                                            desc: The location at the center of the block the item was used on.
                                            id: predicates-7
                                            link: location_pred
                                        }
                                        item: {
                                            desc: The item used on the block.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-killed_by_crossbow: {
                                conditions: {
                                    type: object
                                    props: {
                                        unique_entity_types: {
                                            desc: The number of types of entities killed.
                                            id: predicates-7
                                            link: intmm0
                                        }
                                        victims: {
                                            desc: Either a single predicate that must match any of the killed entities, or a list of predicates that must match any of the killed entities. All of the predicates must be matched, and one killed entity may match only one predicate.
                                            or: [
                                                {id: "predicates-7", link: "entity_pred"}
                                                {type: "list", vals: {id: "predicates-7", link: "entity_preds"}}
                                            ]
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-levitation: {
                                conditions: {
                                    type: object
                                    props: {
                                        distance: {
                                            id: predicates-7
                                            link: intdistance
                                        }
                                        duration: {
                                            desc: The duration of the levitation in ticks.
                                            id: predicates-7
                                            link: intmm0
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-lightning_strike: {
                                conditions: {
                                    type: object
                                    props: {
                                        lightning: {
                                            desc: The lightning bolt that disappeared. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        bystander: {
                                            desc: An entity not hurt by the lightning strike but in a certain area around it. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-location: {
                                conditions: {
                                    type: object
                                    props: {
                                        location: {
                                            desc: The location of the player.
                                            id: predicates-7
                                            link: location_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-nether_travel: {
                                conditions: {
                                    type: object
                                    props: {
                                        entered: {
                                            desc: The location where the player entered the Nether.
                                            id: predicates-7
                                            link: location_pred
                                        }
                                        exited: {
                                            desc: The location where the player exited the Nether.
                                            id: predicates-7
                                            link: location_pred
                                        }
                                        distance: {
                                            desc: The overworld distance between where the player entered the Nether and where the player exited the Nether.
                                            id: predicates-7
                                            link: distance
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-placed_block: {
                                conditions: {
                                    type: object
                                    props: {
                                        block: {
                                            desc: The block that was placed.
                                            id: predicates-7
                                            link: block
                                        }
                                        item: {
                                            desc: The item that was used to place the block before the item was consumed.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        location: {
                                            desc: The location of the block that was placed.
                                            id: predicates-7
                                            link: location_pred
                                        }
                                        state: {
                                            desc: The block states of the block, with the key names being the state names and the values being the required values for those states.
                                            type: object
                                            extra: {
                                                type: string
                                            }
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-player_generates_container_loot: {
                                conditions: {
                                    type: object
                                    props: {
                                        loot_table: {
                                            desc: The resource location of the generated loot table.
                                            type: string
                                            allow: a-z0-9_\/:-#
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-player_hurt_entity: {
                                conditions: {
                                    type: object
                                    props: {
                                        damage: {
                                            desc: The damage that was dealt. Missing corresponding list of predicates for the direct entity.
                                            link: damage
                                        }
                                        entity: {
                                            desc: The entity that was damaged. May be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-player_interacted_with_entity: {
                                conditions: {
                                    type: object
                                    props: {
                                        item: {
                                            desc: The item which was in the player's hand during interaction.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        entity: {
                                            desc: The entity that was interacted with. May be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-player_killed_entity: {
                                conditions: {
                                    type: object
                                    props: {
                                        killing_blow: {
                                            desc: The damage that killed an entity. Missing corresponding list of predicates for the direct entity.
                                            link: damage
                                        }
                                        entity: {
                                            desc: The entity that was killed. May be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-recipe_unlocked: {
                                conditions: {
                                    type: object
                                    props: {
                                        recipe: {
                                            desc: The recipe that was unlocked.
                                            type: string
                                            allow: a-z0-9_\/:-
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-shot_crossbow: {
                                conditions: {
                                    type: object
                                    props: {
                                        item: {
                                            desc: The crossbow that was used.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-slept_in_bed: {
                                conditions: {
                                    type: object
                                    props: {
                                        location: {
                                            desc: The location of the player when entering the bed.
                                            id: predicates-7
                                            link: location_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-slide_down_block: {
                                conditions: {
                                    type: object
                                    props: {
                                        block: {
                                            desc: The block that the player slid on.
                                            id: predicates-7
                                            link: block
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-started_riding: {
                                conditions: {
                                    type: object
                                    props: {
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-summoned_entity: {
                                conditions: {
                                    type: object
                                    props: {
                                        entity: {
                                            desc: The summoned entity. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-tame_animal: {
                                conditions: {
                                    type: object
                                    props: {
                                        entity: {
                                            desc: The entity that was tamed. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-target_hit: {
                                conditions: {
                                    type: object
                                    props: {
                                        signal_strength: {
                                            desc: The redstone signal that will come out of the target block.
                                            type: integer
                                            min: 0
                                        }
                                        projectile: {
                                            desc: The projectile used to hit the target block
                                            type: string
                                            allow: a-z0-9_\/:-
                                        }
                                        shooter: {
                                            desc: The player who shot or threw the projectile. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-thrown_item_picked_up_by_entity: {
                                conditions: {
                                    type: object
                                    props: {
                                        item: {
                                            desc: The thrown item which was picked up.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        entity: {
                                            desc: The entity which picked up the item. May be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-tick: {
                                conditions: {
                                    type: object
                                    props: {
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-used_ender_eye: {
                                conditions: {
                                    type: object
                                    props: {
                                        distance: {
                                            desc: The horizontal distance between the player and the stronghold.
                                            id: predicates-7
                                            link: nummm0
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-used_totem: {
                                conditions: {
                                    type: object
                                    props: {
                                        item: {
                                            desc: The totem that was used.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-using_item: {
                                conditions: {
                                    type: object
                                    props: {
                                        item: {
                                            desc: The item being currently used, only works for certain items like bows, crossbows, honey bottles, milk buckets, potions, shields, spyglasses, tridents, food items, and eyes of enders. Most items that activate from a single click do not affect this trigger.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-villager_trade: {
                                conditions: {
                                    type: object
                                    props: {
                                        item: {
                                            desc: The item that was purchased. The "count" tag checks the count from one trade, not multiple.
                                            id: predicates-7
                                            link: item_pred
                                        }
                                        villager: {
                                            desc: The villager the item was purchased from. May be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                            string-voluntary_exile: {
                                conditions: {
                                    type: object
                                    props: {
                                        location: {
                                            desc: The location of the player.
                                            id: predicates-7
                                            link: location_pred
                                        }
                                        player: {
                                            desc: The player that would get the advancement. May also be a list of predicates that must pass in order for the trigger to activate.
                                            id: predicates-7
                                            link: entity_preds
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        requirements: {
            desc: An optional list of requirements (all the <criteriaNames>). If all criteria are required, this may be omitted. With multiple criteria: requirements contains a list of lists with criteria (all criteria need to be mentioned). If all of the lists each have any criteria met, the advancement is complete. (basically AND grouping of OR groups).
            type: list
            vals: {
                type: list
                vals: {type: "string"}
            }
        }
        rewards: {
            desc: An optional object representing the rewards provided when this advancement is obtained.
            type: object
            props: {
                recipes: {
                    desc: A list of recipes to unlock.
                    type: list
                    vals: {type: "string"}
                }
                loot: {
                    desc: A list of loot tables to give to the player.
                    type: list
                    vals: {type: "string"}
                }
                experience: {
                    desc: An amount of experience.
                    type: integer
                }
                function: {
                    desc: A function to run. Function tags are not allowed.
                    type: string
                    allow: a-z0-9_\/:-
                }
            }
        }
    }
}